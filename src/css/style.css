@charset "UTF-8";
.news h4 {
  margin: 0;
  margin-top: 5px;
  margin-bottom: 5px;
  border-bottom: 1px solid; }

.news .row {
  position: relative; }

.news article {
  position: relative;
  padding: 10%;
  position: relative; }
  .news article:before {
    content: '';
    position: absolute;
    background: white;
    width: 80%;
    height: 90%;
    z-index: -2;
    -webkit-transform: skewY(3deg) translateY(-5%);
            transform: skewY(3deg) translateY(-5%); }

.about div {
  position: relative;
  margin-top: 50px;
  pading-top: 50px; }
  .about div article {
    padding: 10%; }
    .about div article:before {
      content: "";
      position: absolute;
      background: white;
      width: 80%;
      height: 80%;
      z-index: -2;
      -webkit-transform: skewY(3deg);
              transform: skewY(3deg); }

.about h3 {
  margin: 0;
  margin-top: 10px;
  pading-left: 5px;
  border-bottom: 2px solid; }

.about p {
  padding-left: 3%;
  padding-right: 3%; }

.heder {
  padding-top: 100px;
  display: -webkit-box;
  display: flex;
  width: 100%;
  height: 300px; }

.site-branding {
  width: 100%;
  height: 300px;
  left: 0;
  position: absolute; }
  .site-branding h2 {
    margin-top: 75px;
    text-align: center;
    font-weight: bold; }
  .site-branding:before {
    content: "";
    background: yellow;
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    z-index: -2;
    -webkit-transform: skewY(3deg);
            transform: skewY(3deg); }

@media all and (max-width: 768px) {
  .heder {
    padding-top: 50px; }
  .site-branding {
    width: 100%;
    height: 300px;
    left: 0;
    position: absolute; }
    .site-branding h2 {
      margin-top: 75px; } }

footer {
  margin-top: 100px;
  text-align: center;
  background-color: white; }

heder {
  position: absolute;
  width: 100%; }
  heder button {
    background: transparent;
    color: white;
    border: 0;
    margin: 0; }

.logo {
  top: 10px;
  z-index: 2; }
  .logo img {
    height: 100px;
    width: 100px;
    background: #212122;
    border-radius: 50%;
    margin-left: 30%; }

.hamburger {
  display: none; }

@media all and (max-width: 768px) {
  .hamburger {
    margin: 20px;
    margin-right: 10%;
    display: block;
    left: auto;
    right: 1px;
    width: 24px;
    height: 21px;
    z-index: 2;
    border-top: 3px solid #d1d1d1;
    position: absolute;
    transition: 0.3s -webkit-transform linear;
    transition: 0.3s transform linear;
    transition: 0.3s transform linear, 0.3s -webkit-transform linear; }
    .hamburger::before, .hamburger:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      border-top: 3px solid #d1d1d1;
      -webkit-transform: translateY(7.5px);
              transform: translateY(7.5px); }
    .hamburger::after {
      -webkit-transform: translateY(18px);
              transform: translateY(18px); }
    .hamburger:focus {
      -webkit-transform: rotate(45deg);
              transform: rotate(45deg);
      border: none; }
      .hamburger:focus::after {
        -webkit-transform: rotate(90deg) translateX(8px);
                transform: rotate(90deg) translateX(8px);
        border-color: #6b6b6b; }
      .hamburger:focus::before {
        border-color: #6b6b6b; }
    .hamburger:focus ~ .site-menu {
      -webkit-transform: translateY(400px);
              transform: translateY(400px); }
  .logo img {
    height: 50px;
    width: 50px; }
  .site-nav {
    z-index: 1;
    width: 100%;
    height: 300px;
    position: absolute;
    padding: 0; }
  .site-menu {
    z-index: 1;
    position: absolute;
    top: -400px;
    padding-top: 60px;
    width: 100%;
    height: 100%;
    transition: 0.3s -webkit-transform ease-in-out;
    transition: 0.3s transform ease-in-out;
    transition: 0.3s transform ease-in-out, 0.3s -webkit-transform ease-in-out; }
    .site-menu::before {
      background: #e9e9e9;
      content: "";
      width: 100%;
      height: 120%;
      position: absolute;
      z-index: -2;
      -webkit-transform: skewY(3deg) translateY(-100px);
              transform: skewY(3deg) translateY(-100px); }
    .site-menu ul {
      padding: 0;
      list-style-type: none;
      margin: 0; }
    .site-menu li {
      display: -webkit-box;
      display: flex;
      -webkit-box-pack: center;
              justify-content: center;
      width: 100%;
      box-sizing: border-box;
      margin: 0; }
    .site-menu a,
    .site-menu input {
      display: -webkit-box;
      display: flex;
      -webkit-box-pack: center;
              justify-content: center;
      color: #212122;
      margin: 10px;
      width: 30%;
      height: 100%;
      text-decoration: none;
      box-sizing: border-box;
      background-color: white;
      border: 2px solid;
        border-radius: 40%; }
    .site-menu input {
      background-color: transparent;
      border-top: 0;
      border-right: 0;
      border-color: black;
      border-left: 0;
      border-radius: 0; }
  .changeLatters {
    z-index: 1;
    height: 50px;
    font-family: "Open Sans";
    font-size: 24px;
    font-weight: bold; }
  #reducingLatters {
    font-size: 18px;
    text-align: left;
    height: 100%;
    color: #e7e6e6; }
  #increaseLatters {
    text-align: right;
    height: 100%;
    color: #e7e6e6; } }

html {
  font-size: 62.5%;
  /*dostosowanie do tego by 0,1 rem by≈Ç jak 1px*/ }
  html body {
    background-color: #212122; }

img {
  width: 200px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
